{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-26T13:36:40.714Z",
    "end": "2024-09-26T13:36:41.205Z",
    "duration": 491,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d77bc526-9f87-4579-98a2-d6df770688ce",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "005c99d9-9f7a-4623-a6ce-b775803f05e1",
          "title": "Create User kasirAJa",
          "fullFile": "C:\\Users\\LENOVO\\OneDrive\\문서\\QA Automation\\API-Automation_Assignment\\module\\test\\function\\createUser.spec.js",
          "file": "\\module\\test\\function\\createUser.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive - Success Create User",
              "fullTitle": "Create User kasirAJa Positive - Success Create User",
              "timedOut": false,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFiODRkODBlLTllZWEtNGIwNy1hNGMzLTIzNDcxYWY1OGRiZiIsImNvbXBhbnlJZCI6IjAyNDgzMmM5LTAzYWItNGU1Zi1iNjU1LTBiNzA1ZWVjMDE4MiIsImlhdCI6MTcwODg3MzcwNH0.HBU3NIWeoDZzaBCKb4xiuPGb--hW31ZK3WvbcMBA7aM\"\nconst cashier1 = {\n    \"name\": \"Ananta\",\n    \"email\": \"ananta@gmail.com\",\n    \"password\": \"ananta123\"\n}\n//send request\nconst response = await request (baseUrl)\n    .post(\"/users\") //endpoint\n    .send(cashier1) //request body\n    .set('Authorization',`bearer ${token}`)\n\n    expect((await response).status).to.equal(405)\n    assert.isNotNull(response, \"Response is not null\")\n    console.log((await response).body)",
              "err": {},
              "uuid": "dd1cf4f8-3f42-4b63-8c0f-dbe94c793074",
              "parentUUID": "005c99d9-9f7a-4623-a6ce-b775803f05e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd1cf4f8-3f42-4b63-8c0f-dbe94c793074"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "26de01a1-f54d-43bf-bc7a-9aa5cfd2b3cd",
          "title": "Delete User kasirAJa",
          "fullFile": "C:\\Users\\LENOVO\\OneDrive\\문서\\QA Automation\\API-Automation_Assignment\\module\\test\\function\\deleteUser.spec.js",
          "file": "\\module\\test\\function\\deleteUser.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive - Success Delete User",
              "fullTitle": "Delete User kasirAJa Positive - Success Delete User",
              "timedOut": false,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//send request\nconst response = await request (baseUrl)\n    .delete(`/users/${userId}`)\n    .set('Authorization',`bearer ${token}`)\n    expect((await response).status).to.equal(405)\n    assert.exists(response)\n    console.log((await response).body)",
              "err": {},
              "uuid": "622f7597-1458-441f-859c-9be0ed273e5f",
              "parentUUID": "26de01a1-f54d-43bf-bc7a-9aa5cfd2b3cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "622f7597-1458-441f-859c-9be0ed273e5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 91,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7fd3017-c5c6-4bad-b728-6c0e9b6ef49c",
          "title": "Get User Detail kasirAJa",
          "fullFile": "C:\\Users\\LENOVO\\OneDrive\\문서\\QA Automation\\API-Automation_Assignment\\module\\test\\function\\getUserDetail.spec.js",
          "file": "\\module\\test\\function\\getUserDetail.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive - Success Get User Detail",
              "fullTitle": "Get User Detail kasirAJa Positive - Success Get User Detail",
              "timedOut": false,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//send request\nconst response = await request (baseUrl)\n    .get(`/users/${userId}`)\n    .set(\"Content-Type\",\"application/json\")\n    .set('Authorization',`bearer ${token}`)\n    expect((await response).status).to.equal(200)\n    assert.exists(response)\n    console.log((await response).body)",
              "err": {},
              "uuid": "cbdb83f9-27b4-4950-b02b-62376c4b2f1e",
              "parentUUID": "d7fd3017-c5c6-4bad-b728-6c0e9b6ef49c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cbdb83f9-27b4-4950-b02b-62376c4b2f1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "879585cd-0d63-4460-9695-8772c82ca848",
          "title": "Update User kasirAJa",
          "fullFile": "C:\\Users\\LENOVO\\OneDrive\\문서\\QA Automation\\API-Automation_Assignment\\module\\test\\function\\updateUser.spec.js",
          "file": "\\module\\test\\function\\updateUser.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Positive - Success Update User",
              "fullTitle": "Update User kasirAJa Positive - Success Update User",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjFiODRkODBlLTllZWEtNGIwNy1hNGMzLTIzNDcxYWY1OGRiZiIsImNvbXBhbnlJZCI6IjAyNDgzMmM5LTAzYWItNGU1Zi1iNjU1LTBiNzA1ZWVjMDE4MiIsImlhdCI6MTcwODg3MzcwNH0.HBU3NIWeoDZzaBCKb4xiuPGb--hW31ZK3WvbcMBA7aM\"\nconst userId = \"ff9c6b20-dc03-4fe0-b072-7f3f7b9d6acf\"\nconst updateCashier1 = {\n    \"name\": \"AnantaDanty\",\n    \"email\": \"ananta@gmail.com\",\n}\n//send request\nconst response = await request (baseUrl)\n    .put(`/users/${userId}`)\n    .set('Authorization',`bearer ${token}`)\n    .send(updateCashier1) //request body\n    \n    expect((await response).status).to.equal(405)\n    assert.exists(response)\n    console.log((await response).body)",
              "err": {},
              "uuid": "aeff2c18-9f80-40c4-8e49-3a803dde1454",
              "parentUUID": "879585cd-0d63-4460-9695-8772c82ca848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeff2c18-9f80-40c4-8e49-3a803dde1454"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 96,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}